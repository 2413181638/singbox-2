name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.21'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            output: singbox-xboard-linux-amd64
          - os: windows-latest
            goos: windows
            goarch: amd64
            output: singbox-xboard-windows-amd64.exe
          - os: macos-latest
            goos: darwin
            goarch: amd64
            output: singbox-xboard-darwin-amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -trimpath -ldflags "-s -w -X main.Version=${{ github.ref_name }}" -o dist/${{ matrix.output }} ./cmd

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.output }}
        path: dist/${{ matrix.output }}

  build-multi-arch:
    name: Build Multi-Arch
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build all platforms
      run: |
        # Linux ARM
        GOOS=linux GOARCH=arm GOARM=7 go build -trimpath -ldflags "-s -w" -o dist/singbox-xboard-linux-armv7 ./cmd
        GOOS=linux GOARCH=arm64 go build -trimpath -ldflags "-s -w" -o dist/singbox-xboard-linux-arm64 ./cmd
        
        # Windows 386
        GOOS=windows GOARCH=386 go build -trimpath -ldflags "-s -w" -o dist/singbox-xboard-windows-386.exe ./cmd
        
        # macOS ARM64
        GOOS=darwin GOARCH=arm64 go build -trimpath -ldflags "-s -w" -o dist/singbox-xboard-darwin-arm64 ./cmd

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: multi-arch-builds
        path: dist/*

  android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Install gomobile
      run: |
        go install golang.org/x/mobile/cmd/gomobile@latest
        gomobile init

    - name: Build Android AAR
      run: |
        mkdir -p dist/android
        # 这里需要根据实际的 Android 项目结构调整
        echo "Android 构建将在后续版本中实现"

    - name: Upload Android artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-aar
        path: dist/android/*

  release:
    name: Create Release
    needs: [build, build-multi-arch]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Create checksums
      run: |
        cd artifacts
        for dir in */; do
          if [ -d "$dir" ]; then
            cd "$dir"
            for file in *; do
              if [ -f "$file" ]; then
                sha256sum "$file" > "$file.sha256"
                mv "$file" "$file.sha256" ../
              fi
            done
            cd ..
          fi
        done

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        body: |
          ## Singbox Xboard Client ${{ github.ref_name }}
          
          ### 下载说明
          
          - **Windows**: 
            - `singbox-xboard-windows-amd64.exe` (64位)
            - `singbox-xboard-windows-386.exe` (32位)
          
          - **macOS**: 
            - `singbox-xboard-darwin-amd64` (Intel)
            - `singbox-xboard-darwin-arm64` (Apple Silicon)
          
          - **Linux**: 
            - `singbox-xboard-linux-amd64` (64位)
            - `singbox-xboard-linux-armv7` (ARM 32位)
            - `singbox-xboard-linux-arm64` (ARM 64位)
          
          - **Android**: 
            - 即将推出
          
          ### 使用方法
          
          1. 下载对应平台的文件
          2. 赋予执行权限（Linux/macOS）：`chmod +x singbox-xboard-*`
          3. 运行程序：`./singbox-xboard-*`
          
          ### 更新日志
          
          请查看 [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
          
        files: |
          artifacts/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}